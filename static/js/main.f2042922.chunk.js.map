{"version":3,"sources":["api/tabs.ts","components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["tabs","id","title","content","Tab","memo","tab","selectedTabId","onTabSelected","useMemo","isSelected","handleButtonClick","useCallback","className","type","disabled","onClick","Tabs","map","App","useState","selectedTab","setTab","handleTabSelected","ReactDOM","render","document","getElementById"],"mappings":"yJAAaA,EAAc,CACzB,CACEC,GAAI,QACJC,MAAO,OACPC,QAAS,6FAEX,CACEF,GAAI,QACJC,MAAO,UACPC,QAAS,+FAEX,CACEF,GAAI,QACJC,MAAO,UACPC,QAAS,iG,OCJAC,EAAiBC,gBAC5B,YAA4C,IAAzCC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACrB,EAA+BC,mBAAQ,kBAAMH,IAAK,IAA1CL,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,QAEbO,EAAaD,mBACjB,kBAAMF,IAAkBN,IACxB,CAACM,IAGGI,EAAoBC,uBAAY,WAC/BF,GACHF,EAAcF,KAEf,CAACC,IAEJ,OACE,qCACE,wBACEM,UAAU,aACVC,KAAK,SACLC,SAAUL,EACVM,QAASL,EAJX,SAMGT,IAGFQ,GACC,mBAAGG,UAAU,eAAb,SACGV,UC7BAc,EAAkBZ,gBAC7B,YAA6C,IAA1CL,EAAyC,EAAzCA,KAAMO,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACtB,OACE,qBAAKK,UAAU,OAAf,SACE,oBAAIA,UAAU,aAAd,SACGb,EAAKkB,KAAI,SAAAZ,GAAG,OACX,oBAAIO,UAAU,aAAd,SACE,cAACT,EAAD,CACEE,IAAKA,EACLC,cAAeA,EACfC,cAAeA,KAJaF,EAAIL,cCRnCkB,EAAUd,gBAAK,WAC1B,MAA8Be,mBAASpB,EAAK,IAA5C,mBAAOqB,EAAP,KAAoBC,EAApB,KAEMC,EAAoBX,sBAAYU,EAAQ,IAE9C,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,mCACsBQ,EAAYnB,SAGlC,cAACe,EAAD,CACEjB,KAAMA,EACNO,cAAec,EAAYpB,GAC3BO,cAAee,UClBvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f2042922.chunk.js","sourcesContent":["export const tabs: Tab[] = [\n  {\n    id: 'tab-1',\n    title: 'Home',\n    content: 'Ab accusantium ad adipisci corporis ducimus laborum natus quibusdam recusandae vel, velit',\n  },\n  {\n    id: 'tab-2',\n    title: 'Profile',\n    content: 'Autem, qui, voluptas? Consectetur delectus eveniet fugiat harum nisi quibusdam sit tempore!',\n  },\n  {\n    id: 'tab-3',\n    title: 'Contact',\n    content: 'Animi atque exercitationem facere id inventore laborum magni recusandae sed similique velit!',\n  },\n];\n","import {\n  FC, memo, useCallback, useMemo,\n} from 'react';\n\ninterface Props {\n  tab: Tab;\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tab: FC<Props> = memo(\n  ({ tab, selectedTabId, onTabSelected }) => {\n    const { id, title, content } = useMemo(() => tab, []);\n\n    const isSelected = useMemo(\n      () => selectedTabId === id,\n      [selectedTabId],\n    );\n\n    const handleButtonClick = useCallback(() => {\n      if (!isSelected) {\n        onTabSelected(tab);\n      }\n    }, [selectedTabId]);\n\n    return (\n      <>\n        <button\n          className=\"Tab__title\"\n          type=\"button\"\n          disabled={isSelected}\n          onClick={handleButtonClick}\n        >\n          {title}\n        </button>\n\n        {isSelected && (\n          <p className=\"Tab__content\">\n            {content}\n          </p>\n        )}\n      </>\n    );\n  },\n);\n","import { FC, memo } from 'react';\nimport { Tab } from '../Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: FC<Props> = memo(\n  ({ tabs, selectedTabId, onTabSelected }) => {\n    return (\n      <div className=\"Tabs\">\n        <ul className=\"Tabs__list\">\n          {tabs.map(tab => (\n            <li className=\"Tabs__item\" key={tab.id}>\n              <Tab\n                tab={tab}\n                selectedTabId={selectedTabId}\n                onTabSelected={onTabSelected}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  },\n);\n","import './App.scss';\nimport {\n  FC, memo, useCallback, useState,\n} from 'react';\nimport { tabs } from './api/tabs';\nimport { Tabs } from './components/Tabs';\n\nexport const App: FC = memo(() => {\n  const [selectedTab, setTab] = useState(tabs[0]);\n\n  const handleTabSelected = useCallback(setTab, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__selectedTab\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}